ARM GAS  /tmp/cc83IRPx.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"SYS_Tick_program.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.STK_voidInit,"ax",%progbits
  16              		.align	1
  17              		.global	STK_voidInit
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	STK_voidInit:
  25              	.LFB0:
  26              		.file 1 "MCAL/SYS_Tick/SYS_Tick_program.c"
   1:MCAL/SYS_Tick/SYS_Tick_program.c **** #include "STD_TYPES.h"
   2:MCAL/SYS_Tick/SYS_Tick_program.c **** #include "BIT_MATH.h"
   3:MCAL/SYS_Tick/SYS_Tick_program.c **** #include "STM32F103C8.h"
   4:MCAL/SYS_Tick/SYS_Tick_program.c **** 
   5:MCAL/SYS_Tick/SYS_Tick_program.c **** #include "SysTick_interface.h"
   6:MCAL/SYS_Tick/SYS_Tick_program.c **** #include "SysTick_private.h"
   7:MCAL/SYS_Tick/SYS_Tick_program.c **** #include "SysTick_config.h"
   8:MCAL/SYS_Tick/SYS_Tick_program.c **** 
   9:MCAL/SYS_Tick/SYS_Tick_program.c **** void (* STK_CallBack)(void) = NULL;
  10:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  11:MCAL/SYS_Tick/SYS_Tick_program.c **** static u8 STK_u8ModeOfInterval ;
  12:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  13:MCAL/SYS_Tick/SYS_Tick_program.c **** void STK_voidInit(void)
  14:MCAL/SYS_Tick/SYS_Tick_program.c **** {
  27              		.loc 1 14 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  15:MCAL/SYS_Tick/SYS_Tick_program.c ****     #ifdef  STK_CLK_SOURCE
  16:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  17:MCAL/SYS_Tick/SYS_Tick_program.c ****         #if STK_CLK_SOURCE == AHB
  18:MCAL/SYS_Tick/SYS_Tick_program.c ****             SET_BIT(STK->CTRL,2);
  19:MCAL/SYS_Tick/SYS_Tick_program.c ****         #elif STK_CLK_SOURCE == AHB_DIVIDEDBY_8
  20:MCAL/SYS_Tick/SYS_Tick_program.c ****             CLR_BIT(STK->CTRL,2);
  32              		.loc 1 20 13 view .LVU1
  33 0000 024A     		ldr	r2, .L2
  34 0002 1368     		ldr	r3, [r2]
  35 0004 23F00403 		bic	r3, r3, #4
  36 0008 1360     		str	r3, [r2]
  21:MCAL/SYS_Tick/SYS_Tick_program.c ****         #endif
  22:MCAL/SYS_Tick/SYS_Tick_program.c ****     #endif
ARM GAS  /tmp/cc83IRPx.s 			page 2


  23:MCAL/SYS_Tick/SYS_Tick_program.c **** }
  37              		.loc 1 23 1 is_stmt 0 view .LVU2
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 10E000E0 		.word	-536813552
  43              		.cfi_endproc
  44              	.LFE0:
  46              		.section	.text.STK_voidSetBusyWait,"ax",%progbits
  47              		.align	1
  48              		.global	STK_voidSetBusyWait
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu softvfp
  54              	STK_voidSetBusyWait:
  55              	.LVL0:
  56              	.LFB1:
  24:MCAL/SYS_Tick/SYS_Tick_program.c **** ERROR_enumSTATE STK_voidSetBusyWait(u32 Copy_u32Tick_numbers )
  25:MCAL/SYS_Tick/SYS_Tick_program.c **** {
  57              		.loc 1 25 1 is_stmt 1 view -0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  26:MCAL/SYS_Tick/SYS_Tick_program.c ****     ERROR_enumSTATE LOC_enumError_State = STD_TYPES_OK;
  62              		.loc 1 26 5 view .LVU4
  27:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  28:MCAL/SYS_Tick/SYS_Tick_program.c ****     if( Copy_u32Tick_numbers <= MAX_TICK_TIMES )
  63              		.loc 1 28 5 view .LVU5
  64              		.loc 1 28 7 is_stmt 0 view .LVU6
  65 0000 B0F1807F 		cmp	r0, #16777216
  66 0004 14D2     		bcs	.L7
  29:MCAL/SYS_Tick/SYS_Tick_program.c ****     {
  30:MCAL/SYS_Tick/SYS_Tick_program.c ****         STK->LOAD = Copy_u32Tick_numbers;
  67              		.loc 1 30 9 is_stmt 1 view .LVU7
  68              		.loc 1 30 19 is_stmt 0 view .LVU8
  69 0006 0B4B     		ldr	r3, .L8
  70 0008 5860     		str	r0, [r3, #4]
  31:MCAL/SYS_Tick/SYS_Tick_program.c ****         SET_BIT(STK->CTRL ,0);
  71              		.loc 1 31 9 is_stmt 1 view .LVU9
  72 000a 1A68     		ldr	r2, [r3]
  73 000c 42F00102 		orr	r2, r2, #1
  74 0010 1A60     		str	r2, [r3]
  32:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  33:MCAL/SYS_Tick/SYS_Tick_program.c ****         while(GET_BIT(STK->CTRL ,16) != 1);
  75              		.loc 1 33 9 view .LVU10
  76              	.L6:
  77              		.loc 1 33 43 discriminator 1 view .LVU11
  78              		.loc 1 33 14 discriminator 1 view .LVU12
  79              		.loc 1 33 15 is_stmt 0 discriminator 1 view .LVU13
  80 0012 084B     		ldr	r3, .L8
  81 0014 1B68     		ldr	r3, [r3]
  82              		.loc 1 33 14 discriminator 1 view .LVU14
  83 0016 13F4803F 		tst	r3, #65536
  84 001a FAD0     		beq	.L6
ARM GAS  /tmp/cc83IRPx.s 			page 3


  34:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  35:MCAL/SYS_Tick/SYS_Tick_program.c ****         CLR_BIT(STK->CTRL ,0);
  85              		.loc 1 35 9 is_stmt 1 view .LVU15
  86 001c 054B     		ldr	r3, .L8
  87 001e 1A68     		ldr	r2, [r3]
  88 0020 22F00102 		bic	r2, r2, #1
  89 0024 1A60     		str	r2, [r3]
  36:MCAL/SYS_Tick/SYS_Tick_program.c ****         STK->LOAD = 0;
  90              		.loc 1 36 9 view .LVU16
  91              		.loc 1 36 19 is_stmt 0 view .LVU17
  92 0026 0022     		movs	r2, #0
  93 0028 5A60     		str	r2, [r3, #4]
  37:MCAL/SYS_Tick/SYS_Tick_program.c ****         STK->VAL = 0;
  94              		.loc 1 37 9 is_stmt 1 view .LVU18
  95              		.loc 1 37 18 is_stmt 0 view .LVU19
  96 002a 9A60     		str	r2, [r3, #8]
  26:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  97              		.loc 1 26 21 view .LVU20
  98 002c 0120     		movs	r0, #1
  99              	.LVL1:
  26:MCAL/SYS_Tick/SYS_Tick_program.c **** 
 100              		.loc 1 26 21 view .LVU21
 101 002e 7047     		bx	lr
 102              	.LVL2:
 103              	.L7:
  38:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  39:MCAL/SYS_Tick/SYS_Tick_program.c ****     }else{ LOC_enumError_State = STD_TYPES_NOK; }
 104              		.loc 1 39 32 view .LVU22
 105 0030 0020     		movs	r0, #0
 106              	.LVL3:
  40:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  41:MCAL/SYS_Tick/SYS_Tick_program.c ****     return LOC_enumError_State;
 107              		.loc 1 41 5 is_stmt 1 view .LVU23
  42:MCAL/SYS_Tick/SYS_Tick_program.c **** }
 108              		.loc 1 42 1 is_stmt 0 view .LVU24
 109 0032 7047     		bx	lr
 110              	.L9:
 111              		.align	2
 112              	.L8:
 113 0034 10E000E0 		.word	-536813552
 114              		.cfi_endproc
 115              	.LFE1:
 117              		.section	.text.STK_enumSetIntervalSingle,"ax",%progbits
 118              		.align	1
 119              		.global	STK_enumSetIntervalSingle
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu softvfp
 125              	STK_enumSetIntervalSingle:
 126              	.LVL4:
 127              	.LFB2:
  43:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  44:MCAL/SYS_Tick/SYS_Tick_program.c **** ERROR_enumSTATE STK_enumSetIntervalSingle(u32 Copy_u32Tick_numbers ,void(*Copy_STK_CallBack)(void))
  45:MCAL/SYS_Tick/SYS_Tick_program.c **** {
 128              		.loc 1 45 1 is_stmt 1 view -0
 129              		.cfi_startproc
ARM GAS  /tmp/cc83IRPx.s 			page 4


 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
  46:MCAL/SYS_Tick/SYS_Tick_program.c ****     ERROR_enumSTATE LOC_enumError_State = STD_TYPES_OK;
 133              		.loc 1 46 5 view .LVU26
  47:MCAL/SYS_Tick/SYS_Tick_program.c ****     if( Copy_STK_CallBack != NULL )
 134              		.loc 1 47 5 view .LVU27
 135              		.loc 1 47 7 is_stmt 0 view .LVU28
 136 0000 C9B1     		cbz	r1, .L12
  45:MCAL/SYS_Tick/SYS_Tick_program.c ****     ERROR_enumSTATE LOC_enumError_State = STD_TYPES_OK;
 137              		.loc 1 45 1 view .LVU29
 138 0002 10B4     		push	{r4}
 139              	.LCFI0:
 140              		.cfi_def_cfa_offset 4
 141              		.cfi_offset 4, -4
  48:MCAL/SYS_Tick/SYS_Tick_program.c ****     {
  49:MCAL/SYS_Tick/SYS_Tick_program.c ****         if( Copy_u32Tick_numbers <= MAX_TICK_TIMES )
 142              		.loc 1 49 9 is_stmt 1 view .LVU30
 143              		.loc 1 49 11 is_stmt 0 view .LVU31
 144 0004 B0F1807F 		cmp	r0, #16777216
 145 0008 17D2     		bcs	.L13
  50:MCAL/SYS_Tick/SYS_Tick_program.c ****         {
  51:MCAL/SYS_Tick/SYS_Tick_program.c ****             CLR_BIT(STK->CTRL ,0);
 146              		.loc 1 51 13 is_stmt 1 view .LVU32
 147 000a 0D4B     		ldr	r3, .L18
 148 000c 1A68     		ldr	r2, [r3]
 149 000e 22F00102 		bic	r2, r2, #1
 150 0012 1A60     		str	r2, [r3]
  52:MCAL/SYS_Tick/SYS_Tick_program.c ****             STK->VAL = 0;
 151              		.loc 1 52 13 view .LVU33
 152              		.loc 1 52 22 is_stmt 0 view .LVU34
 153 0014 0022     		movs	r2, #0
 154 0016 9A60     		str	r2, [r3, #8]
  53:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  54:MCAL/SYS_Tick/SYS_Tick_program.c ****             STK->LOAD = Copy_u32Tick_numbers;
 155              		.loc 1 54 13 is_stmt 1 view .LVU35
 156              		.loc 1 54 23 is_stmt 0 view .LVU36
 157 0018 5860     		str	r0, [r3, #4]
  55:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  56:MCAL/SYS_Tick/SYS_Tick_program.c ****             SET_BIT(STK->CTRL ,0);
 158              		.loc 1 56 13 is_stmt 1 view .LVU37
 159 001a 1A68     		ldr	r2, [r3]
 160 001c 42F00102 		orr	r2, r2, #1
 161 0020 1A60     		str	r2, [r3]
  57:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  58:MCAL/SYS_Tick/SYS_Tick_program.c ****             STK_CallBack = Copy_STK_CallBack;
 162              		.loc 1 58 13 view .LVU38
 163              		.loc 1 58 26 is_stmt 0 view .LVU39
 164 0022 084A     		ldr	r2, .L18+4
 165 0024 1160     		str	r1, [r2]
  59:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  60:MCAL/SYS_Tick/SYS_Tick_program.c ****             STK_u8ModeOfInterval =  MODE_OF_INTERVAL_SINGLE ;
 166              		.loc 1 60 13 is_stmt 1 view .LVU40
 167              		.loc 1 60 34 is_stmt 0 view .LVU41
 168 0026 0120     		movs	r0, #1
 169              	.LVL5:
 170              		.loc 1 60 34 view .LVU42
ARM GAS  /tmp/cc83IRPx.s 			page 5


 171 0028 074A     		ldr	r2, .L18+8
 172 002a 1070     		strb	r0, [r2]
  61:MCAL/SYS_Tick/SYS_Tick_program.c ****    
  62:MCAL/SYS_Tick/SYS_Tick_program.c ****             SET_BIT(STK->CTRL ,1);
 173              		.loc 1 62 13 is_stmt 1 view .LVU43
 174 002c 1A68     		ldr	r2, [r3]
 175 002e 42F00202 		orr	r2, r2, #2
 176 0032 1A60     		str	r2, [r3]
 177 0034 02E0     		b	.L11
 178              	.LVL6:
 179              	.L12:
 180              	.LCFI1:
 181              		.cfi_def_cfa_offset 0
 182              		.cfi_restore 4
  63:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  64:MCAL/SYS_Tick/SYS_Tick_program.c ****         }else{ LOC_enumError_State = STD_TYPES_NOK; }
  65:MCAL/SYS_Tick/SYS_Tick_program.c ****     }else{ LOC_enumError_State = STD_TYPES_NOK; }
 183              		.loc 1 65 32 is_stmt 0 view .LVU44
 184 0036 0020     		movs	r0, #0
 185              	.LVL7:
  66:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  67:MCAL/SYS_Tick/SYS_Tick_program.c ****     return LOC_enumError_State;
 186              		.loc 1 67 5 is_stmt 1 view .LVU45
  68:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  69:MCAL/SYS_Tick/SYS_Tick_program.c **** }
 187              		.loc 1 69 1 is_stmt 0 view .LVU46
 188 0038 7047     		bx	lr
 189              	.LVL8:
 190              	.L13:
 191              	.LCFI2:
 192              		.cfi_def_cfa_offset 4
 193              		.cfi_offset 4, -4
  64:MCAL/SYS_Tick/SYS_Tick_program.c ****     }else{ LOC_enumError_State = STD_TYPES_NOK; }
 194              		.loc 1 64 36 view .LVU47
 195 003a 0020     		movs	r0, #0
 196              	.LVL9:
 197              	.L11:
  67:MCAL/SYS_Tick/SYS_Tick_program.c **** 
 198              		.loc 1 67 5 is_stmt 1 view .LVU48
 199              		.loc 1 69 1 is_stmt 0 view .LVU49
 200 003c 10BC     		pop	{r4}
 201              	.LCFI3:
 202              		.cfi_restore 4
 203              		.cfi_def_cfa_offset 0
 204 003e 7047     		bx	lr
 205              	.L19:
 206              		.align	2
 207              	.L18:
 208 0040 10E000E0 		.word	-536813552
 209 0044 00000000 		.word	.LANCHOR0
 210 0048 00000000 		.word	.LANCHOR1
 211              		.cfi_endproc
 212              	.LFE2:
 214              		.section	.text.STK_enumSetIntervalPeriodic,"ax",%progbits
 215              		.align	1
 216              		.global	STK_enumSetIntervalPeriodic
 217              		.syntax unified
ARM GAS  /tmp/cc83IRPx.s 			page 6


 218              		.thumb
 219              		.thumb_func
 220              		.fpu softvfp
 222              	STK_enumSetIntervalPeriodic:
 223              	.LVL10:
 224              	.LFB3:
  70:MCAL/SYS_Tick/SYS_Tick_program.c **** ERROR_enumSTATE STK_enumSetIntervalPeriodic(u32 Copy_u32Tick_numbers ,void(*Copy_STK_CallBack)(void
  71:MCAL/SYS_Tick/SYS_Tick_program.c **** {
 225              		.loc 1 71 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
  72:MCAL/SYS_Tick/SYS_Tick_program.c ****     ERROR_enumSTATE LOC_enumError_State = STD_TYPES_OK;
 230              		.loc 1 72 5 view .LVU51
  73:MCAL/SYS_Tick/SYS_Tick_program.c ****     if( Copy_STK_CallBack != NULL )
 231              		.loc 1 73 5 view .LVU52
 232              		.loc 1 73 7 is_stmt 0 view .LVU53
 233 0000 A1B1     		cbz	r1, .L22
  71:MCAL/SYS_Tick/SYS_Tick_program.c ****     ERROR_enumSTATE LOC_enumError_State = STD_TYPES_OK;
 234              		.loc 1 71 1 view .LVU54
 235 0002 10B4     		push	{r4}
 236              	.LCFI4:
 237              		.cfi_def_cfa_offset 4
 238              		.cfi_offset 4, -4
  74:MCAL/SYS_Tick/SYS_Tick_program.c ****     {
  75:MCAL/SYS_Tick/SYS_Tick_program.c ****         if( Copy_u32Tick_numbers <= MAX_TICK_TIMES )
 239              		.loc 1 75 9 is_stmt 1 view .LVU55
 240              		.loc 1 75 11 is_stmt 0 view .LVU56
 241 0004 B0F1807F 		cmp	r0, #16777216
 242 0008 12D2     		bcs	.L23
  76:MCAL/SYS_Tick/SYS_Tick_program.c ****         {
  77:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  78:MCAL/SYS_Tick/SYS_Tick_program.c ****             STK->LOAD = Copy_u32Tick_numbers-1;
 243              		.loc 1 78 13 is_stmt 1 view .LVU57
 244              		.loc 1 78 45 is_stmt 0 view .LVU58
 245 000a 0138     		subs	r0, r0, #1
 246              	.LVL11:
 247              		.loc 1 78 23 view .LVU59
 248 000c 0A4B     		ldr	r3, .L28
 249 000e 5860     		str	r0, [r3, #4]
  79:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  80:MCAL/SYS_Tick/SYS_Tick_program.c ****             SET_BIT(STK->CTRL ,0);
 250              		.loc 1 80 13 is_stmt 1 view .LVU60
 251 0010 1A68     		ldr	r2, [r3]
 252 0012 42F00102 		orr	r2, r2, #1
 253 0016 1A60     		str	r2, [r3]
  81:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  82:MCAL/SYS_Tick/SYS_Tick_program.c ****             STK_CallBack = Copy_STK_CallBack;
 254              		.loc 1 82 13 view .LVU61
 255              		.loc 1 82 26 is_stmt 0 view .LVU62
 256 0018 084A     		ldr	r2, .L28+4
 257 001a 1160     		str	r1, [r2]
  83:MCAL/SYS_Tick/SYS_Tick_program.c ****             
  84:MCAL/SYS_Tick/SYS_Tick_program.c ****             STK_u8ModeOfInterval = MODE_OF_INTERVAL_PERIODIC;
 258              		.loc 1 84 13 is_stmt 1 view .LVU63
 259              		.loc 1 84 34 is_stmt 0 view .LVU64
ARM GAS  /tmp/cc83IRPx.s 			page 7


 260 001c 084A     		ldr	r2, .L28+8
 261 001e 0221     		movs	r1, #2
 262              	.LVL12:
 263              		.loc 1 84 34 view .LVU65
 264 0020 1170     		strb	r1, [r2]
  85:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  86:MCAL/SYS_Tick/SYS_Tick_program.c ****             SET_BIT(STK->CTRL ,1);
 265              		.loc 1 86 13 is_stmt 1 view .LVU66
 266 0022 1A68     		ldr	r2, [r3]
 267 0024 0A43     		orrs	r2, r2, r1
 268 0026 1A60     		str	r2, [r3]
 269              	.LVL13:
  72:MCAL/SYS_Tick/SYS_Tick_program.c ****     if( Copy_STK_CallBack != NULL )
 270              		.loc 1 72 21 is_stmt 0 view .LVU67
 271 0028 0120     		movs	r0, #1
 272              	.LVL14:
  72:MCAL/SYS_Tick/SYS_Tick_program.c ****     if( Copy_STK_CallBack != NULL )
 273              		.loc 1 72 21 view .LVU68
 274 002a 02E0     		b	.L21
 275              	.LVL15:
 276              	.L22:
 277              	.LCFI5:
 278              		.cfi_def_cfa_offset 0
 279              		.cfi_restore 4
  87:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  88:MCAL/SYS_Tick/SYS_Tick_program.c ****         }else{ LOC_enumError_State = STD_TYPES_NOK; }
  89:MCAL/SYS_Tick/SYS_Tick_program.c ****     }else{ LOC_enumError_State = STD_TYPES_NOK; }
 280              		.loc 1 89 32 view .LVU69
 281 002c 0020     		movs	r0, #0
 282              	.LVL16:
  90:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  91:MCAL/SYS_Tick/SYS_Tick_program.c ****     return LOC_enumError_State;
 283              		.loc 1 91 5 is_stmt 1 view .LVU70
  92:MCAL/SYS_Tick/SYS_Tick_program.c **** }
 284              		.loc 1 92 1 is_stmt 0 view .LVU71
 285 002e 7047     		bx	lr
 286              	.LVL17:
 287              	.L23:
 288              	.LCFI6:
 289              		.cfi_def_cfa_offset 4
 290              		.cfi_offset 4, -4
  88:MCAL/SYS_Tick/SYS_Tick_program.c ****     }else{ LOC_enumError_State = STD_TYPES_NOK; }
 291              		.loc 1 88 36 view .LVU72
 292 0030 0020     		movs	r0, #0
 293              	.LVL18:
 294              	.L21:
  91:MCAL/SYS_Tick/SYS_Tick_program.c **** }
 295              		.loc 1 91 5 is_stmt 1 view .LVU73
 296              		.loc 1 92 1 is_stmt 0 view .LVU74
 297 0032 10BC     		pop	{r4}
 298              	.LCFI7:
 299              		.cfi_restore 4
 300              		.cfi_def_cfa_offset 0
 301 0034 7047     		bx	lr
 302              	.L29:
 303 0036 00BF     		.align	2
 304              	.L28:
ARM GAS  /tmp/cc83IRPx.s 			page 8


 305 0038 10E000E0 		.word	-536813552
 306 003c 00000000 		.word	.LANCHOR0
 307 0040 00000000 		.word	.LANCHOR1
 308              		.cfi_endproc
 309              	.LFE3:
 311              		.section	.text.STK_voidStopTimer,"ax",%progbits
 312              		.align	1
 313              		.global	STK_voidStopTimer
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu softvfp
 319              	STK_voidStopTimer:
 320              	.LFB4:
  93:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  94:MCAL/SYS_Tick/SYS_Tick_program.c **** void STK_voidStopTimer(void)
  95:MCAL/SYS_Tick/SYS_Tick_program.c **** {
 321              		.loc 1 95 1 is_stmt 1 view -0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
  96:MCAL/SYS_Tick/SYS_Tick_program.c ****     CLR_BIT(STK->CTRL ,1);
 326              		.loc 1 96 5 view .LVU76
 327 0000 064B     		ldr	r3, .L31
 328 0002 1A68     		ldr	r2, [r3]
 329 0004 22F00202 		bic	r2, r2, #2
 330 0008 1A60     		str	r2, [r3]
  97:MCAL/SYS_Tick/SYS_Tick_program.c **** 
  98:MCAL/SYS_Tick/SYS_Tick_program.c ****     CLR_BIT(STK->CTRL ,0);
 331              		.loc 1 98 5 view .LVU77
 332 000a 1A68     		ldr	r2, [r3]
 333 000c 22F00102 		bic	r2, r2, #1
 334 0010 1A60     		str	r2, [r3]
  99:MCAL/SYS_Tick/SYS_Tick_program.c ****     STK->LOAD = 0;
 335              		.loc 1 99 5 view .LVU78
 336              		.loc 1 99 15 is_stmt 0 view .LVU79
 337 0012 0022     		movs	r2, #0
 338 0014 5A60     		str	r2, [r3, #4]
 100:MCAL/SYS_Tick/SYS_Tick_program.c ****     STK->VAL = 0;
 339              		.loc 1 100 5 is_stmt 1 view .LVU80
 340              		.loc 1 100 14 is_stmt 0 view .LVU81
 341 0016 9A60     		str	r2, [r3, #8]
 101:MCAL/SYS_Tick/SYS_Tick_program.c **** 
 102:MCAL/SYS_Tick/SYS_Tick_program.c **** }
 342              		.loc 1 102 1 view .LVU82
 343 0018 7047     		bx	lr
 344              	.L32:
 345 001a 00BF     		.align	2
 346              	.L31:
 347 001c 10E000E0 		.word	-536813552
 348              		.cfi_endproc
 349              	.LFE4:
 351              		.section	.text.STK_enumGetElapsedTime,"ax",%progbits
 352              		.align	1
 353              		.global	STK_enumGetElapsedTime
 354              		.syntax unified
ARM GAS  /tmp/cc83IRPx.s 			page 9


 355              		.thumb
 356              		.thumb_func
 357              		.fpu softvfp
 359              	STK_enumGetElapsedTime:
 360              	.LVL19:
 361              	.LFB5:
 103:MCAL/SYS_Tick/SYS_Tick_program.c **** 
 104:MCAL/SYS_Tick/SYS_Tick_program.c **** ERROR_enumSTATE STK_enumGetElapsedTime(volatile u32 *Copy_pu32ElapsedTime)
 105:MCAL/SYS_Tick/SYS_Tick_program.c **** {
 362              		.loc 1 105 1 is_stmt 1 view -0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 106:MCAL/SYS_Tick/SYS_Tick_program.c ****     ERROR_enumSTATE LOC_enumError_State = STD_TYPES_OK;
 367              		.loc 1 106 5 view .LVU84
 107:MCAL/SYS_Tick/SYS_Tick_program.c ****     if( Copy_pu32ElapsedTime != NULL)
 368              		.loc 1 107 5 view .LVU85
 369              		.loc 1 107 7 is_stmt 0 view .LVU86
 370 0000 30B1     		cbz	r0, .L35
 108:MCAL/SYS_Tick/SYS_Tick_program.c ****     {
 109:MCAL/SYS_Tick/SYS_Tick_program.c ****         *Copy_pu32ElapsedTime = (STK->LOAD - STK->VAL) ;
 371              		.loc 1 109 9 is_stmt 1 view .LVU87
 372              		.loc 1 109 37 is_stmt 0 view .LVU88
 373 0002 044A     		ldr	r2, .L36
 374 0004 5368     		ldr	r3, [r2, #4]
 375              		.loc 1 109 49 view .LVU89
 376 0006 9268     		ldr	r2, [r2, #8]
 377              		.loc 1 109 44 view .LVU90
 378 0008 9B1A     		subs	r3, r3, r2
 379              		.loc 1 109 31 view .LVU91
 380 000a 0360     		str	r3, [r0]
 106:MCAL/SYS_Tick/SYS_Tick_program.c ****     if( Copy_pu32ElapsedTime != NULL)
 381              		.loc 1 106 21 view .LVU92
 382 000c 0120     		movs	r0, #1
 383              	.LVL20:
 106:MCAL/SYS_Tick/SYS_Tick_program.c ****     if( Copy_pu32ElapsedTime != NULL)
 384              		.loc 1 106 21 view .LVU93
 385 000e 7047     		bx	lr
 386              	.LVL21:
 387              	.L35:
 110:MCAL/SYS_Tick/SYS_Tick_program.c **** 
 111:MCAL/SYS_Tick/SYS_Tick_program.c ****     }else{ LOC_enumError_State = STD_TYPES_NOK;}
 388              		.loc 1 111 32 view .LVU94
 389 0010 0020     		movs	r0, #0
 390              	.LVL22:
 112:MCAL/SYS_Tick/SYS_Tick_program.c **** 
 113:MCAL/SYS_Tick/SYS_Tick_program.c ****     return  LOC_enumError_State;
 391              		.loc 1 113 5 is_stmt 1 view .LVU95
 114:MCAL/SYS_Tick/SYS_Tick_program.c **** }
 392              		.loc 1 114 1 is_stmt 0 view .LVU96
 393 0012 7047     		bx	lr
 394              	.L37:
 395              		.align	2
 396              	.L36:
 397 0014 10E000E0 		.word	-536813552
 398              		.cfi_endproc
ARM GAS  /tmp/cc83IRPx.s 			page 10


 399              	.LFE5:
 401              		.section	.text.STK_enumGetRemainingTime,"ax",%progbits
 402              		.align	1
 403              		.global	STK_enumGetRemainingTime
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu softvfp
 409              	STK_enumGetRemainingTime:
 410              	.LVL23:
 411              	.LFB6:
 115:MCAL/SYS_Tick/SYS_Tick_program.c **** ERROR_enumSTATE STK_enumGetRemainingTime(u32 *Copy_pu32RemainingTime)
 116:MCAL/SYS_Tick/SYS_Tick_program.c **** {
 412              		.loc 1 116 1 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 117:MCAL/SYS_Tick/SYS_Tick_program.c ****     ERROR_enumSTATE LOC_enumError_State = STD_TYPES_OK;
 417              		.loc 1 117 5 view .LVU98
 118:MCAL/SYS_Tick/SYS_Tick_program.c ****     if( Copy_pu32RemainingTime != NULL)
 418              		.loc 1 118 5 view .LVU99
 419              		.loc 1 118 7 is_stmt 0 view .LVU100
 420 0000 20B1     		cbz	r0, .L40
 119:MCAL/SYS_Tick/SYS_Tick_program.c ****     {
 120:MCAL/SYS_Tick/SYS_Tick_program.c ****         *Copy_pu32RemainingTime = STK->VAL ;
 421              		.loc 1 120 9 is_stmt 1 view .LVU101
 422              		.loc 1 120 38 is_stmt 0 view .LVU102
 423 0002 034A     		ldr	r2, .L41
 424 0004 9268     		ldr	r2, [r2, #8]
 425              		.loc 1 120 33 view .LVU103
 426 0006 0260     		str	r2, [r0]
 117:MCAL/SYS_Tick/SYS_Tick_program.c ****     if( Copy_pu32RemainingTime != NULL)
 427              		.loc 1 117 21 view .LVU104
 428 0008 0120     		movs	r0, #1
 429              	.LVL24:
 117:MCAL/SYS_Tick/SYS_Tick_program.c ****     if( Copy_pu32RemainingTime != NULL)
 430              		.loc 1 117 21 view .LVU105
 431 000a 7047     		bx	lr
 432              	.LVL25:
 433              	.L40:
 121:MCAL/SYS_Tick/SYS_Tick_program.c **** 
 122:MCAL/SYS_Tick/SYS_Tick_program.c ****     }else{ LOC_enumError_State = STD_TYPES_NOK;}
 434              		.loc 1 122 32 view .LVU106
 435 000c 0020     		movs	r0, #0
 436              	.LVL26:
 123:MCAL/SYS_Tick/SYS_Tick_program.c **** 
 124:MCAL/SYS_Tick/SYS_Tick_program.c ****     return  LOC_enumError_State;
 437              		.loc 1 124 5 is_stmt 1 view .LVU107
 125:MCAL/SYS_Tick/SYS_Tick_program.c **** }
 438              		.loc 1 125 1 is_stmt 0 view .LVU108
 439 000e 7047     		bx	lr
 440              	.L42:
 441              		.align	2
 442              	.L41:
 443 0010 10E000E0 		.word	-536813552
 444              		.cfi_endproc
ARM GAS  /tmp/cc83IRPx.s 			page 11


 445              	.LFE6:
 447              		.section	.text.SysTick_Handler,"ax",%progbits
 448              		.align	1
 449              		.global	SysTick_Handler
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu softvfp
 455              	SysTick_Handler:
 456              	.LFB7:
 126:MCAL/SYS_Tick/SYS_Tick_program.c **** 
 127:MCAL/SYS_Tick/SYS_Tick_program.c **** void SysTick_Handler(void)
 128:MCAL/SYS_Tick/SYS_Tick_program.c **** {
 457              		.loc 1 128 1 is_stmt 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461 0000 08B5     		push	{r3, lr}
 462              	.LCFI8:
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 3, -8
 465              		.cfi_offset 14, -4
 129:MCAL/SYS_Tick/SYS_Tick_program.c ****     static u8 LOC_u8Temp_CLR = 0;
 466              		.loc 1 129 5 view .LVU110
 130:MCAL/SYS_Tick/SYS_Tick_program.c ****     if( STK_CallBack != NULL )
 467              		.loc 1 130 5 view .LVU111
 468              		.loc 1 130 22 is_stmt 0 view .LVU112
 469 0002 0D4B     		ldr	r3, .L48
 470 0004 1B68     		ldr	r3, [r3]
 471              		.loc 1 130 7 view .LVU113
 472 0006 43B1     		cbz	r3, .L43
 131:MCAL/SYS_Tick/SYS_Tick_program.c ****     {
 132:MCAL/SYS_Tick/SYS_Tick_program.c ****     	if ( STK_u8ModeOfInterval == MODE_OF_INTERVAL_SINGLE )
 473              		.loc 1 132 6 is_stmt 1 view .LVU114
 474              		.loc 1 132 32 is_stmt 0 view .LVU115
 475 0008 0C4B     		ldr	r3, .L48+4
 476 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 477              		.loc 1 132 9 view .LVU116
 478 000c 012B     		cmp	r3, #1
 479 000e 05D0     		beq	.L47
 480              	.L45:
 133:MCAL/SYS_Tick/SYS_Tick_program.c ****     	{
 134:MCAL/SYS_Tick/SYS_Tick_program.c ****     		/* Disable STK Interrupt */
 135:MCAL/SYS_Tick/SYS_Tick_program.c ****     		CLR_BIT(STK->CTRL, 1);
 136:MCAL/SYS_Tick/SYS_Tick_program.c **** 
 137:MCAL/SYS_Tick/SYS_Tick_program.c ****     		/* Stop Timer */
 138:MCAL/SYS_Tick/SYS_Tick_program.c ****     		CLR_BIT(STK->CTRL, 0);
 139:MCAL/SYS_Tick/SYS_Tick_program.c ****     		STK -> LOAD = 0;
 140:MCAL/SYS_Tick/SYS_Tick_program.c ****     		STK -> VAL  = 0;
 141:MCAL/SYS_Tick/SYS_Tick_program.c ****     	}
 142:MCAL/SYS_Tick/SYS_Tick_program.c **** 
 143:MCAL/SYS_Tick/SYS_Tick_program.c ****     	/* Callback notification */
 144:MCAL/SYS_Tick/SYS_Tick_program.c ****     	STK_CallBack();
 481              		.loc 1 144 6 is_stmt 1 view .LVU117
 482 0010 094B     		ldr	r3, .L48
 483 0012 1B68     		ldr	r3, [r3]
 484 0014 9847     		blx	r3
ARM GAS  /tmp/cc83IRPx.s 			page 12


 485              	.LVL27:
 145:MCAL/SYS_Tick/SYS_Tick_program.c **** 
 146:MCAL/SYS_Tick/SYS_Tick_program.c ****     	/* Clear interrupt flag */
 147:MCAL/SYS_Tick/SYS_Tick_program.c ****     	LOC_u8Temp_CLR =GET_BIT(STK->CTRL,16);
 486              		.loc 1 147 6 view .LVU118
 487              		.loc 1 147 22 is_stmt 0 view .LVU119
 488 0016 0A4B     		ldr	r3, .L48+8
 489 0018 1B68     		ldr	r3, [r3]
 490              	.L43:
 148:MCAL/SYS_Tick/SYS_Tick_program.c ****     }
 149:MCAL/SYS_Tick/SYS_Tick_program.c **** 
 150:MCAL/SYS_Tick/SYS_Tick_program.c **** }
 491              		.loc 1 150 1 view .LVU120
 492 001a 08BD     		pop	{r3, pc}
 493              	.L47:
 135:MCAL/SYS_Tick/SYS_Tick_program.c **** 
 494              		.loc 1 135 7 is_stmt 1 view .LVU121
 495 001c 084B     		ldr	r3, .L48+8
 496 001e 1A68     		ldr	r2, [r3]
 497 0020 22F00202 		bic	r2, r2, #2
 498 0024 1A60     		str	r2, [r3]
 138:MCAL/SYS_Tick/SYS_Tick_program.c ****     		STK -> LOAD = 0;
 499              		.loc 1 138 7 view .LVU122
 500 0026 1A68     		ldr	r2, [r3]
 501 0028 22F00102 		bic	r2, r2, #1
 502 002c 1A60     		str	r2, [r3]
 139:MCAL/SYS_Tick/SYS_Tick_program.c ****     		STK -> VAL  = 0;
 503              		.loc 1 139 7 view .LVU123
 139:MCAL/SYS_Tick/SYS_Tick_program.c ****     		STK -> VAL  = 0;
 504              		.loc 1 139 19 is_stmt 0 view .LVU124
 505 002e 0022     		movs	r2, #0
 506 0030 5A60     		str	r2, [r3, #4]
 140:MCAL/SYS_Tick/SYS_Tick_program.c ****     	}
 507              		.loc 1 140 7 is_stmt 1 view .LVU125
 140:MCAL/SYS_Tick/SYS_Tick_program.c ****     	}
 508              		.loc 1 140 19 is_stmt 0 view .LVU126
 509 0032 9A60     		str	r2, [r3, #8]
 510 0034 ECE7     		b	.L45
 511              	.L49:
 512 0036 00BF     		.align	2
 513              	.L48:
 514 0038 00000000 		.word	.LANCHOR0
 515 003c 00000000 		.word	.LANCHOR1
 516 0040 10E000E0 		.word	-536813552
 517              		.cfi_endproc
 518              	.LFE7:
 520              		.global	STK_CallBack
 521              		.section	.bss.STK_CallBack,"aw",%nobits
 522              		.align	2
 523              		.set	.LANCHOR0,. + 0
 526              	STK_CallBack:
 527 0000 00000000 		.space	4
 528              		.section	.bss.STK_u8ModeOfInterval,"aw",%nobits
 529              		.set	.LANCHOR1,. + 0
 532              	STK_u8ModeOfInterval:
 533 0000 00       		.space	1
 534              		.text
ARM GAS  /tmp/cc83IRPx.s 			page 13


 535              	.Letext0:
 536              		.file 2 "LIB/STD_TYPES.h"
 537              		.file 3 "LIB/STM32F103C8.h"
ARM GAS  /tmp/cc83IRPx.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 SYS_Tick_program.c
     /tmp/cc83IRPx.s:16     .text.STK_voidInit:0000000000000000 $t
     /tmp/cc83IRPx.s:24     .text.STK_voidInit:0000000000000000 STK_voidInit
     /tmp/cc83IRPx.s:42     .text.STK_voidInit:000000000000000c $d
     /tmp/cc83IRPx.s:47     .text.STK_voidSetBusyWait:0000000000000000 $t
     /tmp/cc83IRPx.s:54     .text.STK_voidSetBusyWait:0000000000000000 STK_voidSetBusyWait
     /tmp/cc83IRPx.s:113    .text.STK_voidSetBusyWait:0000000000000034 $d
     /tmp/cc83IRPx.s:118    .text.STK_enumSetIntervalSingle:0000000000000000 $t
     /tmp/cc83IRPx.s:125    .text.STK_enumSetIntervalSingle:0000000000000000 STK_enumSetIntervalSingle
     /tmp/cc83IRPx.s:208    .text.STK_enumSetIntervalSingle:0000000000000040 $d
     /tmp/cc83IRPx.s:215    .text.STK_enumSetIntervalPeriodic:0000000000000000 $t
     /tmp/cc83IRPx.s:222    .text.STK_enumSetIntervalPeriodic:0000000000000000 STK_enumSetIntervalPeriodic
     /tmp/cc83IRPx.s:305    .text.STK_enumSetIntervalPeriodic:0000000000000038 $d
     /tmp/cc83IRPx.s:312    .text.STK_voidStopTimer:0000000000000000 $t
     /tmp/cc83IRPx.s:319    .text.STK_voidStopTimer:0000000000000000 STK_voidStopTimer
     /tmp/cc83IRPx.s:347    .text.STK_voidStopTimer:000000000000001c $d
     /tmp/cc83IRPx.s:352    .text.STK_enumGetElapsedTime:0000000000000000 $t
     /tmp/cc83IRPx.s:359    .text.STK_enumGetElapsedTime:0000000000000000 STK_enumGetElapsedTime
     /tmp/cc83IRPx.s:397    .text.STK_enumGetElapsedTime:0000000000000014 $d
     /tmp/cc83IRPx.s:402    .text.STK_enumGetRemainingTime:0000000000000000 $t
     /tmp/cc83IRPx.s:409    .text.STK_enumGetRemainingTime:0000000000000000 STK_enumGetRemainingTime
     /tmp/cc83IRPx.s:443    .text.STK_enumGetRemainingTime:0000000000000010 $d
     /tmp/cc83IRPx.s:448    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc83IRPx.s:455    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc83IRPx.s:514    .text.SysTick_Handler:0000000000000038 $d
     /tmp/cc83IRPx.s:526    .bss.STK_CallBack:0000000000000000 STK_CallBack
     /tmp/cc83IRPx.s:522    .bss.STK_CallBack:0000000000000000 $d
     /tmp/cc83IRPx.s:532    .bss.STK_u8ModeOfInterval:0000000000000000 STK_u8ModeOfInterval
     /tmp/cc83IRPx.s:533    .bss.STK_u8ModeOfInterval:0000000000000000 $d

NO UNDEFINED SYMBOLS
