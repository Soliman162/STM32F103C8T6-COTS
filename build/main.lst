ARM GAS  /tmp/ccIYGlwW.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Error_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	Error_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Error_Handler:
  25              	.LFB67:
  26              		.file 1 "Test/main.c"
   1:Test/main.c   **** /* USER CODE BEGIN Header */
   2:Test/main.c   **** /**
   3:Test/main.c   ****   ******************************************************************************
   4:Test/main.c   ****   * @file           : main.c
   5:Test/main.c   ****   * @brief          : Main program body
   6:Test/main.c   ****   ******************************************************************************
   7:Test/main.c   ****   * @attention
   8:Test/main.c   ****   *
   9:Test/main.c   ****   * Copyright (c) 2022 STMicroelectronics.
  10:Test/main.c   ****   * All rights reserved.
  11:Test/main.c   ****   *
  12:Test/main.c   ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Test/main.c   ****   * in the root directory of this software component.
  14:Test/main.c   ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Test/main.c   ****   *
  16:Test/main.c   ****   ******************************************************************************
  17:Test/main.c   ****   */
  18:Test/main.c   **** /* USER CODE END Header */
  19:Test/main.c   **** /* Includes ------------------------------------------------------------------*/
  20:Test/main.c   **** #include "main.h"
  21:Test/main.c   **** 
  22:Test/main.c   **** #include "STD_TYPES.h"
  23:Test/main.c   **** 
  24:Test/main.c   **** #include "RCC_interface.h"
  25:Test/main.c   **** #include "SysTick_interface.h"
  26:Test/main.c   **** #include "GPIO_interface.h"
  27:Test/main.c   **** 
  28:Test/main.c   **** #include "DC_interface.h"
  29:Test/main.c   **** 
  30:Test/main.c   **** /* Private includes ----------------------------------------------------------*/
  31:Test/main.c   **** /* USER CODE BEGIN Includes */
  32:Test/main.c   **** 
ARM GAS  /tmp/ccIYGlwW.s 			page 2


  33:Test/main.c   **** /* USER CODE END Includes */
  34:Test/main.c   **** 
  35:Test/main.c   **** /* Private typedef -----------------------------------------------------------*/
  36:Test/main.c   **** /* USER CODE BEGIN PTD */
  37:Test/main.c   **** 
  38:Test/main.c   **** /* USER CODE END PTD */
  39:Test/main.c   **** 
  40:Test/main.c   **** /* Private define ------------------------------------------------------------*/
  41:Test/main.c   **** /* USER CODE BEGIN PD */
  42:Test/main.c   **** /* USER CODE END PD */
  43:Test/main.c   **** 
  44:Test/main.c   **** /* Private macro -------------------------------------------------------------*/
  45:Test/main.c   **** /* USER CODE BEGIN PM */
  46:Test/main.c   **** 
  47:Test/main.c   **** /* USER CODE END PM */
  48:Test/main.c   **** 
  49:Test/main.c   **** /* Private variables ---------------------------------------------------------*/
  50:Test/main.c   **** 
  51:Test/main.c   **** /* USER CODE BEGIN PV */
  52:Test/main.c   **** 
  53:Test/main.c   **** /* USER CODE END PV */
  54:Test/main.c   **** 
  55:Test/main.c   **** /* Private function prototypes -----------------------------------------------*/
  56:Test/main.c   **** void SystemClock_Config(void);
  57:Test/main.c   **** /* USER CODE BEGIN PFP */
  58:Test/main.c   **** 
  59:Test/main.c   **** /* USER CODE END PFP */
  60:Test/main.c   **** 
  61:Test/main.c   **** /* Private user code ---------------------------------------------------------*/
  62:Test/main.c   **** /* USER CODE BEGIN 0 */
  63:Test/main.c   **** 
  64:Test/main.c   **** /* USER CODE END 0 */
  65:Test/main.c   **** 
  66:Test/main.c   **** /**
  67:Test/main.c   ****   * @brief  The application entry point.
  68:Test/main.c   ****   * @retval int
  69:Test/main.c   ****   */
  70:Test/main.c   **** int main(void)
  71:Test/main.c   **** {
  72:Test/main.c   ****   /* USER CODE BEGIN 1 */
  73:Test/main.c   **** 
  74:Test/main.c   ****   GPIO_CONFIG_t LED_1 = {GPIOA_PORT, PIN_0, GENERAL_PURPOSE_OUTPUT_PUSH_PULL_10MHZ};
  75:Test/main.c   ****   GPIO_CONFIG_t LED_2 = {GPIOA_PORT, PIN_1, GENERAL_PURPOSE_OUTPUT_PUSH_PULL_10MHZ};
  76:Test/main.c   **** 
  77:Test/main.c   ****   /*  GPIO_CONFIG_t Motor_pin[2] = {
  78:Test/main.c   ****                                 (GPIO_CONFIG_t){GPIOA_PORT,PIN_2,GENERAL_PURPOSE_OUTPUT_PUSH_PULL_1
  79:Test/main.c   ****                                 (GPIO_CONFIG_t){GPIOA_PORT,PIN_3,GENERAL_PURPOSE_OUTPUT_PUSH_PULL_1
  80:Test/main.c   ****                               }; 
  81:Test/main.c   **** 
  82:Test/main.c   ****   DC_Motor_Config_t  Motor ;
  83:Test/main.c   **** 
  84:Test/main.c   ****   Motor.Motor_Data[0] = Motor_pin[0];
  85:Test/main.c   ****   Motor.Motor_Data[1] = Motor_pin[1];
  86:Test/main.c   ****     */
  87:Test/main.c   **** 
  88:Test/main.c   ****   DC_Motor_Config_t  Motor = {
  89:Test/main.c   ****                                 (GPIO_CONFIG_t){GPIOA_PORT,PIN_2,GENERAL_PURPOSE_OUTPUT_PUSH_PULL_1
ARM GAS  /tmp/ccIYGlwW.s 			page 3


  90:Test/main.c   ****                                 (GPIO_CONFIG_t){GPIOA_PORT,PIN_3,GENERAL_PURPOSE_OUTPUT_PUSH_PULL_1
  91:Test/main.c   ****                               };
  92:Test/main.c   **** 
  93:Test/main.c   ****   /* USER CODE END 1 */
  94:Test/main.c   **** 
  95:Test/main.c   ****   /* MCU Configuration--------------------------------------------------------*/
  96:Test/main.c   **** 
  97:Test/main.c   ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  98:Test/main.c   ****   HAL_Init();
  99:Test/main.c   **** 
 100:Test/main.c   ****   /* USER CODE BEGIN Init */
 101:Test/main.c   **** 
 102:Test/main.c   ****   /* USER CODE END Init */
 103:Test/main.c   **** 
 104:Test/main.c   ****   /* Configure the system clock */
 105:Test/main.c   ****   SystemClock_Config();
 106:Test/main.c   **** 
 107:Test/main.c   ****   /* USER CODE BEGIN SysInit */
 108:Test/main.c   **** 
 109:Test/main.c   ****   /* USER CODE END SysInit */
 110:Test/main.c   **** 
 111:Test/main.c   ****   /* Initialize all configured peripherals */
 112:Test/main.c   ****   /* USER CODE BEGIN 2 */
 113:Test/main.c   **** 
 114:Test/main.c   ****   DCMotor_voidInit(&Motor);
 115:Test/main.c   ****   
 116:Test/main.c   **** /*   GPIO_enumSETPinMODE( &LED_1 );
 117:Test/main.c   ****   GPIO_enumSETPinMODE( &LED_2 );
 118:Test/main.c   **** 
 119:Test/main.c   ****   GPIO_enumSETPinValue( &LED_1  ,GPIO_LOW );
 120:Test/main.c   ****   GPIO_enumSETPinValue( &LED_2  ,GPIO_LOW ); */
 121:Test/main.c   ****   /* USER CODE END 2 */
 122:Test/main.c   **** 
 123:Test/main.c   ****   /* Infinite loop */
 124:Test/main.c   ****   /* USER CODE BEGIN WHILE */
 125:Test/main.c   ****   while (1)
 126:Test/main.c   ****   {
 127:Test/main.c   ****     /* USER CODE END WHILE */
 128:Test/main.c   **** /*     GPIO_enumSETPinValue( &LED_1  ,GPIO_HIGH );
 129:Test/main.c   ****     GPIO_enumSETPinValue( &LED_2  ,GPIO_HIGH ); */
 130:Test/main.c   **** 
 131:Test/main.c   ****     DCMotor_voidRotate_CW(&Motor);
 132:Test/main.c   ****     STK_voidSetBusyWait(1000000);
 133:Test/main.c   ****     /* USER CODE BEGIN 3 */
 134:Test/main.c   **** /*     GPIO_enumSETPinValue( &LED_1  ,GPIO_LOW );
 135:Test/main.c   ****     GPIO_enumSETPinValue( &LED_2  ,GPIO_LOW ); */
 136:Test/main.c   ****     DCMotor_voidRotate_CCW(&Motor);
 137:Test/main.c   ****     STK_voidSetBusyWait(1000000);
 138:Test/main.c   ****   }
 139:Test/main.c   ****   /* USER CODE END 3 */
 140:Test/main.c   **** 
 141:Test/main.c   ****   return 0;
 142:Test/main.c   **** }
 143:Test/main.c   **** 
 144:Test/main.c   **** /**
 145:Test/main.c   ****   * @brief System Clock Configuration
 146:Test/main.c   ****   * @retval None
ARM GAS  /tmp/ccIYGlwW.s 			page 4


 147:Test/main.c   ****   */
 148:Test/main.c   **** void SystemClock_Config(void)
 149:Test/main.c   **** {
 150:Test/main.c   ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 151:Test/main.c   ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 152:Test/main.c   **** 
 153:Test/main.c   ****   /** Initializes the RCC Oscillators according to the specified parameters
 154:Test/main.c   ****   * in the RCC_OscInitTypeDef structure.
 155:Test/main.c   ****   */
 156:Test/main.c   ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 157:Test/main.c   ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 158:Test/main.c   ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 159:Test/main.c   ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 160:Test/main.c   ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 161:Test/main.c   ****   {
 162:Test/main.c   ****     Error_Handler();
 163:Test/main.c   ****   }
 164:Test/main.c   **** 
 165:Test/main.c   ****   /** Initializes the CPU, AHB and APB buses clocks
 166:Test/main.c   ****   */
 167:Test/main.c   ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 168:Test/main.c   ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 169:Test/main.c   ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 170:Test/main.c   ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 171:Test/main.c   ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 172:Test/main.c   ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 173:Test/main.c   **** 
 174:Test/main.c   ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 175:Test/main.c   ****   {
 176:Test/main.c   ****     Error_Handler();
 177:Test/main.c   ****   }
 178:Test/main.c   ****   /*init clk with my config*/
 179:Test/main.c   ****   RCC_voidCLKInit();
 180:Test/main.c   ****   STK_voidInit();
 181:Test/main.c   ****   
 182:Test/main.c   ****   RCC_enumPeripheralCLKEnable(APB2_BUS, IOPA_CLK);
 183:Test/main.c   ****   RCC_enumPeripheralCLKEnable(APB2_BUS, IOPC_CLK);
 184:Test/main.c   **** }
 185:Test/main.c   **** 
 186:Test/main.c   **** /* USER CODE BEGIN 4 */
 187:Test/main.c   **** 
 188:Test/main.c   **** /* USER CODE END 4 */
 189:Test/main.c   **** 
 190:Test/main.c   **** /**
 191:Test/main.c   ****   * @brief  This function is executed in case of error occurrence.
 192:Test/main.c   ****   * @retval None
 193:Test/main.c   ****   */
 194:Test/main.c   **** void Error_Handler(void)
 195:Test/main.c   **** {
  27              		.loc 1 195 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 196:Test/main.c   ****   /* USER CODE BEGIN Error_Handler_Debug */
 197:Test/main.c   ****   /* User can add his own implementation to report the HAL error return state */
ARM GAS  /tmp/ccIYGlwW.s 			page 5


 198:Test/main.c   ****   __disable_irq();
  33              		.loc 1 198 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  /tmp/ccIYGlwW.s 			page 6


  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccIYGlwW.s 			page 7


 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 140 27 view .LVU2
  38              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 142 3 view .LVU3
  40              		.syntax unified
  41              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
 199:Test/main.c   ****   while (1)
  49              		.loc 1 199 3 discriminator 1 view .LVU4
 200:Test/main.c   ****   {
 201:Test/main.c   ****   }
  50              		.loc 1 201 3 discriminator 1 view .LVU5
 199:Test/main.c   ****   while (1)
  51              		.loc 1 199 9 discriminator 1 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE67:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
ARM GAS  /tmp/ccIYGlwW.s 			page 8


  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu softvfp
  64              	SystemClock_Config:
  65              	.LFB66:
 149:Test/main.c   ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  66              		.loc 1 149 1 view -0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 64
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 00B5     		push	{lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 14, -4
  74 0002 91B0     		sub	sp, sp, #68
  75              	.LCFI1:
  76              		.cfi_def_cfa_offset 72
 150:Test/main.c   ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 150 3 view .LVU8
 150:Test/main.c   ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 150 22 is_stmt 0 view .LVU9
  79 0004 2422     		movs	r2, #36
  80 0006 0021     		movs	r1, #0
  81 0008 07A8     		add	r0, sp, #28
  82 000a FFF7FEFF 		bl	memset
  83              	.LVL0:
 151:Test/main.c   **** 
  84              		.loc 1 151 3 is_stmt 1 view .LVU10
 151:Test/main.c   **** 
  85              		.loc 1 151 22 is_stmt 0 view .LVU11
  86 000e 0023     		movs	r3, #0
  87 0010 0193     		str	r3, [sp, #4]
  88 0012 0293     		str	r3, [sp, #8]
  89 0014 0393     		str	r3, [sp, #12]
  90 0016 0493     		str	r3, [sp, #16]
  91 0018 0593     		str	r3, [sp, #20]
 156:Test/main.c   ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  92              		.loc 1 156 3 is_stmt 1 view .LVU12
 156:Test/main.c   ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  93              		.loc 1 156 36 is_stmt 0 view .LVU13
  94 001a 0223     		movs	r3, #2
  95 001c 0693     		str	r3, [sp, #24]
 157:Test/main.c   ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  96              		.loc 1 157 3 is_stmt 1 view .LVU14
 157:Test/main.c   ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  97              		.loc 1 157 30 is_stmt 0 view .LVU15
  98 001e 0123     		movs	r3, #1
  99 0020 0A93     		str	r3, [sp, #40]
 158:Test/main.c   ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 100              		.loc 1 158 3 is_stmt 1 view .LVU16
 158:Test/main.c   ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 101              		.loc 1 158 41 is_stmt 0 view .LVU17
 102 0022 1023     		movs	r3, #16
 103 0024 0B93     		str	r3, [sp, #44]
 159:Test/main.c   ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/ccIYGlwW.s 			page 9


 104              		.loc 1 159 3 is_stmt 1 view .LVU18
 160:Test/main.c   ****   {
 105              		.loc 1 160 3 view .LVU19
 160:Test/main.c   ****   {
 106              		.loc 1 160 7 is_stmt 0 view .LVU20
 107 0026 06A8     		add	r0, sp, #24
 108 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 109              	.LVL1:
 160:Test/main.c   ****   {
 110              		.loc 1 160 6 view .LVU21
 111 002c C8B9     		cbnz	r0, .L7
 167:Test/main.c   ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 112              		.loc 1 167 3 is_stmt 1 view .LVU22
 167:Test/main.c   ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 113              		.loc 1 167 31 is_stmt 0 view .LVU23
 114 002e 0F23     		movs	r3, #15
 115 0030 0193     		str	r3, [sp, #4]
 169:Test/main.c   ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 116              		.loc 1 169 3 is_stmt 1 view .LVU24
 169:Test/main.c   ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 117              		.loc 1 169 34 is_stmt 0 view .LVU25
 118 0032 0021     		movs	r1, #0
 119 0034 0291     		str	r1, [sp, #8]
 170:Test/main.c   ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 120              		.loc 1 170 3 is_stmt 1 view .LVU26
 170:Test/main.c   ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 121              		.loc 1 170 35 is_stmt 0 view .LVU27
 122 0036 0391     		str	r1, [sp, #12]
 171:Test/main.c   ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 123              		.loc 1 171 3 is_stmt 1 view .LVU28
 171:Test/main.c   ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 124              		.loc 1 171 36 is_stmt 0 view .LVU29
 125 0038 0491     		str	r1, [sp, #16]
 172:Test/main.c   **** 
 126              		.loc 1 172 3 is_stmt 1 view .LVU30
 172:Test/main.c   **** 
 127              		.loc 1 172 36 is_stmt 0 view .LVU31
 128 003a 0591     		str	r1, [sp, #20]
 174:Test/main.c   ****   {
 129              		.loc 1 174 3 is_stmt 1 view .LVU32
 174:Test/main.c   ****   {
 130              		.loc 1 174 7 is_stmt 0 view .LVU33
 131 003c 01A8     		add	r0, sp, #4
 132 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 133              	.LVL2:
 174:Test/main.c   ****   {
 134              		.loc 1 174 6 view .LVU34
 135 0042 80B9     		cbnz	r0, .L8
 179:Test/main.c   ****   STK_voidInit();
 136              		.loc 1 179 3 is_stmt 1 view .LVU35
 137 0044 FFF7FEFF 		bl	RCC_voidCLKInit
 138              	.LVL3:
 180:Test/main.c   ****   
 139              		.loc 1 180 3 view .LVU36
 140 0048 FFF7FEFF 		bl	STK_voidInit
 141              	.LVL4:
 182:Test/main.c   ****   RCC_enumPeripheralCLKEnable(APB2_BUS, IOPC_CLK);
ARM GAS  /tmp/ccIYGlwW.s 			page 10


 142              		.loc 1 182 3 view .LVU37
 143 004c 0221     		movs	r1, #2
 144 004e 0120     		movs	r0, #1
 145 0050 FFF7FEFF 		bl	RCC_enumPeripheralCLKEnable
 146              	.LVL5:
 183:Test/main.c   **** }
 147              		.loc 1 183 3 view .LVU38
 148 0054 0421     		movs	r1, #4
 149 0056 0120     		movs	r0, #1
 150 0058 FFF7FEFF 		bl	RCC_enumPeripheralCLKEnable
 151              	.LVL6:
 184:Test/main.c   **** 
 152              		.loc 1 184 1 is_stmt 0 view .LVU39
 153 005c 11B0     		add	sp, sp, #68
 154              	.LCFI2:
 155              		.cfi_remember_state
 156              		.cfi_def_cfa_offset 4
 157              		@ sp needed
 158 005e 5DF804FB 		ldr	pc, [sp], #4
 159              	.L7:
 160              	.LCFI3:
 161              		.cfi_restore_state
 162:Test/main.c   ****   }
 162              		.loc 1 162 5 is_stmt 1 view .LVU40
 163 0062 FFF7FEFF 		bl	Error_Handler
 164              	.LVL7:
 165              	.L8:
 176:Test/main.c   ****   }
 166              		.loc 1 176 5 view .LVU41
 167 0066 FFF7FEFF 		bl	Error_Handler
 168              	.LVL8:
 169              		.cfi_endproc
 170              	.LFE66:
 172              		.section	.text.main,"ax",%progbits
 173              		.align	1
 174              		.global	main
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu softvfp
 180              	main:
 181              	.LFB65:
  71:Test/main.c   ****   /* USER CODE BEGIN 1 */
 182              		.loc 1 71 1 view -0
 183              		.cfi_startproc
 184              		@ Volatile: function does not return.
 185              		@ args = 0, pretend = 0, frame = 8
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187 0000 00B5     		push	{lr}
 188              	.LCFI4:
 189              		.cfi_def_cfa_offset 4
 190              		.cfi_offset 14, -4
 191 0002 83B0     		sub	sp, sp, #12
 192              	.LCFI5:
 193              		.cfi_def_cfa_offset 16
  74:Test/main.c   ****   GPIO_CONFIG_t LED_2 = {GPIOA_PORT, PIN_1, GENERAL_PURPOSE_OUTPUT_PUSH_PULL_10MHZ};
 194              		.loc 1 74 3 view .LVU43
ARM GAS  /tmp/ccIYGlwW.s 			page 11


  75:Test/main.c   **** 
 195              		.loc 1 75 3 view .LVU44
  88:Test/main.c   ****                                 (GPIO_CONFIG_t){GPIOA_PORT,PIN_2,GENERAL_PURPOSE_OUTPUT_PUSH_PULL_1
 196              		.loc 1 88 3 view .LVU45
  88:Test/main.c   ****                                 (GPIO_CONFIG_t){GPIOA_PORT,PIN_2,GENERAL_PURPOSE_OUTPUT_PUSH_PULL_1
 197              		.loc 1 88 22 is_stmt 0 view .LVU46
 198 0004 0022     		movs	r2, #0
 199 0006 8DF80020 		strb	r2, [sp]
 200 000a 0223     		movs	r3, #2
 201 000c 8DF80130 		strb	r3, [sp, #1]
 202 0010 0123     		movs	r3, #1
 203 0012 8DF80230 		strb	r3, [sp, #2]
 204 0016 8DF80320 		strb	r2, [sp, #3]
 205 001a 0322     		movs	r2, #3
 206 001c 8DF80420 		strb	r2, [sp, #4]
 207 0020 8DF80530 		strb	r3, [sp, #5]
  98:Test/main.c   **** 
 208              		.loc 1 98 3 is_stmt 1 view .LVU47
 209 0024 FFF7FEFF 		bl	HAL_Init
 210              	.LVL9:
 105:Test/main.c   **** 
 211              		.loc 1 105 3 view .LVU48
 212 0028 FFF7FEFF 		bl	SystemClock_Config
 213              	.LVL10:
 114:Test/main.c   ****   
 214              		.loc 1 114 3 view .LVU49
 215 002c 6846     		mov	r0, sp
 216 002e FFF7FEFF 		bl	DCMotor_voidInit
 217              	.LVL11:
 218              	.L10:
 125:Test/main.c   ****   {
 219              		.loc 1 125 3 discriminator 1 view .LVU50
 131:Test/main.c   ****     STK_voidSetBusyWait(1000000);
 220              		.loc 1 131 5 discriminator 1 view .LVU51
 221 0032 6846     		mov	r0, sp
 222 0034 FFF7FEFF 		bl	DCMotor_voidRotate_CW
 223              	.LVL12:
 132:Test/main.c   ****     /* USER CODE BEGIN 3 */
 224              		.loc 1 132 5 discriminator 1 view .LVU52
 225 0038 054C     		ldr	r4, .L12
 226 003a 2046     		mov	r0, r4
 227 003c FFF7FEFF 		bl	STK_voidSetBusyWait
 228              	.LVL13:
 136:Test/main.c   ****     STK_voidSetBusyWait(1000000);
 229              		.loc 1 136 5 discriminator 1 view .LVU53
 230 0040 6846     		mov	r0, sp
 231 0042 FFF7FEFF 		bl	DCMotor_voidRotate_CCW
 232              	.LVL14:
 137:Test/main.c   ****   }
 233              		.loc 1 137 5 discriminator 1 view .LVU54
 234 0046 2046     		mov	r0, r4
 235 0048 FFF7FEFF 		bl	STK_voidSetBusyWait
 236              	.LVL15:
 125:Test/main.c   ****   {
 237              		.loc 1 125 9 discriminator 1 view .LVU55
 238 004c F1E7     		b	.L10
 239              	.L13:
ARM GAS  /tmp/ccIYGlwW.s 			page 12


 240 004e 00BF     		.align	2
 241              	.L12:
 242 0050 40420F00 		.word	1000000
 243              		.cfi_endproc
 244              	.LFE65:
 246              		.text
 247              	.Letext0:
 248              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 249              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 250              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 251              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 252              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 253              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 254              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 255              		.file 10 "LIB/STD_TYPES.h"
 256              		.file 11 "MCAL/GPIO/GPIO_interface.h"
 257              		.file 12 "HAL/DC_motor/DC_interface.h"
 258              		.file 13 "MCAL/RCC/RCC_interface.h"
 259              		.file 14 "MCAL/SYS_Tick/SysTick_interface.h"
 260              		.file 15 "<built-in>"
ARM GAS  /tmp/ccIYGlwW.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccIYGlwW.s:16     .text.Error_Handler:0000000000000000 $t
     /tmp/ccIYGlwW.s:24     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccIYGlwW.s:57     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccIYGlwW.s:64     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccIYGlwW.s:173    .text.main:0000000000000000 $t
     /tmp/ccIYGlwW.s:180    .text.main:0000000000000000 main
     /tmp/ccIYGlwW.s:242    .text.main:0000000000000050 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
RCC_voidCLKInit
STK_voidInit
RCC_enumPeripheralCLKEnable
HAL_Init
DCMotor_voidInit
DCMotor_voidRotate_CW
STK_voidSetBusyWait
DCMotor_voidRotate_CCW
