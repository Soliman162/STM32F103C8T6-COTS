ARM GAS  /tmp/ccwypZJP.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Error_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	Error_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Error_Handler:
  25              	.LFB67:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** #include "STD_TYPES.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** #include "RCC_interface.h"
  25:Core/Src/main.c **** #include "SysTick_interface.h"
  26:Core/Src/main.c **** #include "GPIO_interface.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
ARM GAS  /tmp/ccwypZJP.s 			page 2


  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   GPIO_CONFIG_t LED_1 = {GPIOA_PORT, PIN_0, GENERAL_PURPOSE_OUTPUT_PUSH_PULL_10MHZ};
  73:Core/Src/main.c ****   GPIO_CONFIG_t LED_2 = {GPIOA_PORT, PIN_1, GENERAL_PURPOSE_OUTPUT_PUSH_PULL_10MHZ};
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE END 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  80:Core/Src/main.c ****   //HAL_Init();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Configure the system clock */
  87:Core/Src/main.c ****   SystemClock_Config();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/ccwypZJP.s 			page 3


  90:Core/Src/main.c ****   RCC_voidCLKInit();
  91:Core/Src/main.c ****   STK_voidInit();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   RCC_enumPeripheralCLKEnable(APB2_BUS, IOPA_CLK);
  94:Core/Src/main.c ****   RCC_enumPeripheralCLKEnable(APB2_BUS, IOPC_CLK);
  95:Core/Src/main.c ****   /* USER CODE END SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Initialize all configured peripherals */
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  99:Core/Src/main.c ****   
 100:Core/Src/main.c ****   GPIO_enumSETPinMODE( &LED_1 );
 101:Core/Src/main.c ****   GPIO_enumSETPinMODE( &LED_2 );
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   GPIO_enumSETPinValue( &LED_1  ,GPIO_LOW );
 104:Core/Src/main.c ****   GPIO_enumSETPinValue( &LED_2  ,GPIO_LOW );
 105:Core/Src/main.c ****   /* USER CODE END 2 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Infinite loop */
 108:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 109:Core/Src/main.c ****   while (1)
 110:Core/Src/main.c ****   {
 111:Core/Src/main.c ****     /* USER CODE END WHILE */
 112:Core/Src/main.c ****     GPIO_enumSETPinValue( &LED_1  ,GPIO_HIGH );
 113:Core/Src/main.c ****     GPIO_enumSETPinValue( &LED_2  ,GPIO_LOW );
 114:Core/Src/main.c ****     STK_voidSetBusyWait(1000000);
 115:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 116:Core/Src/main.c ****     GPIO_enumSETPinValue( &LED_1  ,GPIO_LOW );
 117:Core/Src/main.c ****     GPIO_enumSETPinValue( &LED_2  ,GPIO_HIGH );
 118:Core/Src/main.c ****     STK_voidSetBusyWait(1000000);
 119:Core/Src/main.c ****   }
 120:Core/Src/main.c ****   /* USER CODE END 3 */
 121:Core/Src/main.c **** }
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** /**
 124:Core/Src/main.c ****   * @brief System Clock Configuration
 125:Core/Src/main.c ****   * @retval None
 126:Core/Src/main.c ****   */
 127:Core/Src/main.c **** void SystemClock_Config(void)
 128:Core/Src/main.c **** {
 129:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 133:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  /tmp/ccwypZJP.s 			page 4


 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /* USER CODE END 4 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /**
 164:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 165:Core/Src/main.c ****   * @retval None
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c **** void Error_Handler(void)
 168:Core/Src/main.c **** {
  27              		.loc 1 168 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 169:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 170:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 171:Core/Src/main.c ****   __disable_irq();
  33              		.loc 1 171 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
ARM GAS  /tmp/ccwypZJP.s 			page 5


  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccwypZJP.s 			page 6


  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
ARM GAS  /tmp/ccwypZJP.s 			page 7


 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 140 27 view .LVU2
  38              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 142 3 view .LVU3
  40              		.syntax unified
  41              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
 172:Core/Src/main.c ****   while (1)
  49              		.loc 1 172 3 discriminator 1 view .LVU4
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****   }
  50              		.loc 1 174 3 discriminator 1 view .LVU5
 172:Core/Src/main.c ****   while (1)
  51              		.loc 1 172 9 discriminator 1 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE67:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu softvfp
  64              	SystemClock_Config:
  65              	.LFB66:
 128:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  66              		.loc 1 128 1 view -0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 64
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 00B5     		push	{lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 14, -4
  74 0002 91B0     		sub	sp, sp, #68
  75              	.LCFI1:
  76              		.cfi_def_cfa_offset 72
 129:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 129 3 view .LVU8
 129:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 129 22 is_stmt 0 view .LVU9
  79 0004 2422     		movs	r2, #36
  80 0006 0021     		movs	r1, #0
  81 0008 07A8     		add	r0, sp, #28
  82 000a FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccwypZJP.s 			page 8


  83              	.LVL0:
 130:Core/Src/main.c **** 
  84              		.loc 1 130 3 is_stmt 1 view .LVU10
 130:Core/Src/main.c **** 
  85              		.loc 1 130 22 is_stmt 0 view .LVU11
  86 000e 0023     		movs	r3, #0
  87 0010 0193     		str	r3, [sp, #4]
  88 0012 0293     		str	r3, [sp, #8]
  89 0014 0393     		str	r3, [sp, #12]
  90 0016 0493     		str	r3, [sp, #16]
  91 0018 0593     		str	r3, [sp, #20]
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  92              		.loc 1 135 3 is_stmt 1 view .LVU12
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  93              		.loc 1 135 36 is_stmt 0 view .LVU13
  94 001a 0223     		movs	r3, #2
  95 001c 0693     		str	r3, [sp, #24]
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  96              		.loc 1 136 3 is_stmt 1 view .LVU14
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  97              		.loc 1 136 30 is_stmt 0 view .LVU15
  98 001e 0123     		movs	r3, #1
  99 0020 0A93     		str	r3, [sp, #40]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 100              		.loc 1 137 3 is_stmt 1 view .LVU16
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 101              		.loc 1 137 41 is_stmt 0 view .LVU17
 102 0022 1023     		movs	r3, #16
 103 0024 0B93     		str	r3, [sp, #44]
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 104              		.loc 1 138 3 is_stmt 1 view .LVU18
 139:Core/Src/main.c ****   {
 105              		.loc 1 139 3 view .LVU19
 139:Core/Src/main.c ****   {
 106              		.loc 1 139 7 is_stmt 0 view .LVU20
 107 0026 06A8     		add	r0, sp, #24
 108 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 109              	.LVL1:
 139:Core/Src/main.c ****   {
 110              		.loc 1 139 6 view .LVU21
 111 002c 68B9     		cbnz	r0, .L7
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 112              		.loc 1 146 3 is_stmt 1 view .LVU22
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 113              		.loc 1 146 31 is_stmt 0 view .LVU23
 114 002e 0F23     		movs	r3, #15
 115 0030 0193     		str	r3, [sp, #4]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 116              		.loc 1 148 3 is_stmt 1 view .LVU24
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 117              		.loc 1 148 34 is_stmt 0 view .LVU25
 118 0032 0021     		movs	r1, #0
 119 0034 0291     		str	r1, [sp, #8]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 120              		.loc 1 149 3 is_stmt 1 view .LVU26
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 121              		.loc 1 149 35 is_stmt 0 view .LVU27
ARM GAS  /tmp/ccwypZJP.s 			page 9


 122 0036 0391     		str	r1, [sp, #12]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 123              		.loc 1 150 3 is_stmt 1 view .LVU28
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 124              		.loc 1 150 36 is_stmt 0 view .LVU29
 125 0038 0491     		str	r1, [sp, #16]
 151:Core/Src/main.c **** 
 126              		.loc 1 151 3 is_stmt 1 view .LVU30
 151:Core/Src/main.c **** 
 127              		.loc 1 151 36 is_stmt 0 view .LVU31
 128 003a 0591     		str	r1, [sp, #20]
 153:Core/Src/main.c ****   {
 129              		.loc 1 153 3 is_stmt 1 view .LVU32
 153:Core/Src/main.c ****   {
 130              		.loc 1 153 7 is_stmt 0 view .LVU33
 131 003c 01A8     		add	r0, sp, #4
 132 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 133              	.LVL2:
 153:Core/Src/main.c ****   {
 134              		.loc 1 153 6 view .LVU34
 135 0042 20B9     		cbnz	r0, .L8
 157:Core/Src/main.c **** 
 136              		.loc 1 157 1 view .LVU35
 137 0044 11B0     		add	sp, sp, #68
 138              	.LCFI2:
 139              		.cfi_remember_state
 140              		.cfi_def_cfa_offset 4
 141              		@ sp needed
 142 0046 5DF804FB 		ldr	pc, [sp], #4
 143              	.L7:
 144              	.LCFI3:
 145              		.cfi_restore_state
 141:Core/Src/main.c ****   }
 146              		.loc 1 141 5 is_stmt 1 view .LVU36
 147 004a FFF7FEFF 		bl	Error_Handler
 148              	.LVL3:
 149              	.L8:
 155:Core/Src/main.c ****   }
 150              		.loc 1 155 5 view .LVU37
 151 004e FFF7FEFF 		bl	Error_Handler
 152              	.LVL4:
 153              		.cfi_endproc
 154              	.LFE66:
 156              		.section	.text.main,"ax",%progbits
 157              		.align	1
 158              		.global	main
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu softvfp
 164              	main:
 165              	.LFB65:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 166              		.loc 1 69 1 view -0
 167              		.cfi_startproc
 168              		@ Volatile: function does not return.
 169              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccwypZJP.s 			page 10


 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 00B5     		push	{lr}
 172              	.LCFI4:
 173              		.cfi_def_cfa_offset 4
 174              		.cfi_offset 14, -4
 175 0002 83B0     		sub	sp, sp, #12
 176              	.LCFI5:
 177              		.cfi_def_cfa_offset 16
  72:Core/Src/main.c ****   GPIO_CONFIG_t LED_2 = {GPIOA_PORT, PIN_1, GENERAL_PURPOSE_OUTPUT_PUSH_PULL_10MHZ};
 178              		.loc 1 72 3 view .LVU39
  72:Core/Src/main.c ****   GPIO_CONFIG_t LED_2 = {GPIOA_PORT, PIN_1, GENERAL_PURPOSE_OUTPUT_PUSH_PULL_10MHZ};
 179              		.loc 1 72 17 is_stmt 0 view .LVU40
 180 0004 0024     		movs	r4, #0
 181 0006 8DF80440 		strb	r4, [sp, #4]
 182 000a 8DF80540 		strb	r4, [sp, #5]
 183 000e 0125     		movs	r5, #1
 184 0010 8DF80650 		strb	r5, [sp, #6]
  73:Core/Src/main.c **** 
 185              		.loc 1 73 3 is_stmt 1 view .LVU41
  73:Core/Src/main.c **** 
 186              		.loc 1 73 17 is_stmt 0 view .LVU42
 187 0014 1D4B     		ldr	r3, .L12
 188 0016 1B68     		ldr	r3, [r3]
 189 0018 ADF80030 		strh	r3, [sp]	@ movhi
 190 001c 1B0C     		lsrs	r3, r3, #16
 191 001e 8DF80230 		strb	r3, [sp, #2]
  87:Core/Src/main.c **** 
 192              		.loc 1 87 3 is_stmt 1 view .LVU43
 193 0022 FFF7FEFF 		bl	SystemClock_Config
 194              	.LVL5:
  90:Core/Src/main.c ****   STK_voidInit();
 195              		.loc 1 90 3 view .LVU44
 196 0026 FFF7FEFF 		bl	RCC_voidCLKInit
 197              	.LVL6:
  91:Core/Src/main.c **** 
 198              		.loc 1 91 3 view .LVU45
 199 002a FFF7FEFF 		bl	STK_voidInit
 200              	.LVL7:
  93:Core/Src/main.c ****   RCC_enumPeripheralCLKEnable(APB2_BUS, IOPC_CLK);
 201              		.loc 1 93 3 view .LVU46
 202 002e 0221     		movs	r1, #2
 203 0030 2846     		mov	r0, r5
 204 0032 FFF7FEFF 		bl	RCC_enumPeripheralCLKEnable
 205              	.LVL8:
  94:Core/Src/main.c ****   /* USER CODE END SysInit */
 206              		.loc 1 94 3 view .LVU47
 207 0036 0421     		movs	r1, #4
 208 0038 2846     		mov	r0, r5
 209 003a FFF7FEFF 		bl	RCC_enumPeripheralCLKEnable
 210              	.LVL9:
 100:Core/Src/main.c ****   GPIO_enumSETPinMODE( &LED_2 );
 211              		.loc 1 100 3 view .LVU48
 212 003e 01A8     		add	r0, sp, #4
 213 0040 FFF7FEFF 		bl	GPIO_enumSETPinMODE
 214              	.LVL10:
 101:Core/Src/main.c **** 
 215              		.loc 1 101 3 view .LVU49
ARM GAS  /tmp/ccwypZJP.s 			page 11


 216 0044 6846     		mov	r0, sp
 217 0046 FFF7FEFF 		bl	GPIO_enumSETPinMODE
 218              	.LVL11:
 103:Core/Src/main.c ****   GPIO_enumSETPinValue( &LED_2  ,GPIO_LOW );
 219              		.loc 1 103 3 view .LVU50
 220 004a 2146     		mov	r1, r4
 221 004c 01A8     		add	r0, sp, #4
 222 004e FFF7FEFF 		bl	GPIO_enumSETPinValue
 223              	.LVL12:
 104:Core/Src/main.c ****   /* USER CODE END 2 */
 224              		.loc 1 104 3 view .LVU51
 225 0052 2146     		mov	r1, r4
 226 0054 6846     		mov	r0, sp
 227 0056 FFF7FEFF 		bl	GPIO_enumSETPinValue
 228              	.LVL13:
 229              	.L10:
 109:Core/Src/main.c ****   {
 230              		.loc 1 109 3 discriminator 1 view .LVU52
 112:Core/Src/main.c ****     GPIO_enumSETPinValue( &LED_2  ,GPIO_LOW );
 231              		.loc 1 112 5 discriminator 1 view .LVU53
 232 005a 0121     		movs	r1, #1
 233 005c 01A8     		add	r0, sp, #4
 234 005e FFF7FEFF 		bl	GPIO_enumSETPinValue
 235              	.LVL14:
 113:Core/Src/main.c ****     STK_voidSetBusyWait(1000000);
 236              		.loc 1 113 5 discriminator 1 view .LVU54
 237 0062 0021     		movs	r1, #0
 238 0064 6846     		mov	r0, sp
 239 0066 FFF7FEFF 		bl	GPIO_enumSETPinValue
 240              	.LVL15:
 114:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 241              		.loc 1 114 5 discriminator 1 view .LVU55
 242 006a 094C     		ldr	r4, .L12+4
 243 006c 2046     		mov	r0, r4
 244 006e FFF7FEFF 		bl	STK_voidSetBusyWait
 245              	.LVL16:
 116:Core/Src/main.c ****     GPIO_enumSETPinValue( &LED_2  ,GPIO_HIGH );
 246              		.loc 1 116 5 discriminator 1 view .LVU56
 247 0072 0021     		movs	r1, #0
 248 0074 01A8     		add	r0, sp, #4
 249 0076 FFF7FEFF 		bl	GPIO_enumSETPinValue
 250              	.LVL17:
 117:Core/Src/main.c ****     STK_voidSetBusyWait(1000000);
 251              		.loc 1 117 5 discriminator 1 view .LVU57
 252 007a 0121     		movs	r1, #1
 253 007c 6846     		mov	r0, sp
 254 007e FFF7FEFF 		bl	GPIO_enumSETPinValue
 255              	.LVL18:
 118:Core/Src/main.c ****   }
 256              		.loc 1 118 5 discriminator 1 view .LVU58
 257 0082 2046     		mov	r0, r4
 258 0084 FFF7FEFF 		bl	STK_voidSetBusyWait
 259              	.LVL19:
 109:Core/Src/main.c ****   {
 260              		.loc 1 109 9 discriminator 1 view .LVU59
 261 0088 E7E7     		b	.L10
 262              	.L13:
ARM GAS  /tmp/ccwypZJP.s 			page 12


 263 008a 00BF     		.align	2
 264              	.L12:
 265 008c 00000000 		.word	.LANCHOR0
 266 0090 40420F00 		.word	1000000
 267              		.cfi_endproc
 268              	.LFE65:
 270              		.section	.rodata
 271              		.align	2
 272              		.set	.LANCHOR0,. + 0
 273              	.LC0:
 274 0000 00       		.byte	0
 275 0001 01       		.byte	1
 276 0002 01       		.byte	1
 277              		.text
 278              	.Letext0:
 279              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 280              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 281              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 282              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 283              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 284              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 285              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 286              		.file 10 "MCAL/GPIO/GPIO_interface.h"
 287              		.file 11 "LIB/STD_TYPES.h"
 288              		.file 12 "MCAL/RCC/RCC_interface.h"
 289              		.file 13 "MCAL/SYS_Tick/SysTick_interface.h"
 290              		.file 14 "<built-in>"
ARM GAS  /tmp/ccwypZJP.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccwypZJP.s:16     .text.Error_Handler:0000000000000000 $t
     /tmp/ccwypZJP.s:24     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccwypZJP.s:57     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccwypZJP.s:64     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccwypZJP.s:157    .text.main:0000000000000000 $t
     /tmp/ccwypZJP.s:164    .text.main:0000000000000000 main
     /tmp/ccwypZJP.s:265    .text.main:000000000000008c $d
     /tmp/ccwypZJP.s:271    .rodata:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
RCC_voidCLKInit
STK_voidInit
RCC_enumPeripheralCLKEnable
GPIO_enumSETPinMODE
GPIO_enumSETPinValue
STK_voidSetBusyWait
